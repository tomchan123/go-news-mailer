// Code generated by goa v3.13.1, DO NOT EDIT.
//
// email service
//
// Command:
// $ goa gen github.com/tomchan123/go-news-mailer/internal/design --output
// ./internal

package email

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The email service allow sending of news email through API
type Service interface {
	// Send an email to the target subscription
	SendOneEmail(context.Context, *SubscriptionSendOneEmailPayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "email"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"sendOneEmail"}

// Subscription to send an email to
type SubscriptionSendOneEmailPayload struct {
	// Unique identifier of subcription
	UID *string
	// Subscribed email
	Email string
	// Name of the subscriber
	Name *string
	// Datetime when the subscription was made
	CreatedAt *string
}

// MakeServerError builds a goa.ServiceError from an error.
func MakeServerError(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "ServerError", false, false, false)
}

// MakeSubscriptionFieldMissing builds a goa.ServiceError from an error.
func MakeSubscriptionFieldMissing(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "SubscriptionFieldMissing", false, false, false)
}
